name: Actualizar precio del aceite

on:
  schedule:
    - cron: '30 11 * * *'   # 11:30 UTC = 13:30 Espa√±a
  workflow_dispatch:

permissions:
  contents: write

jobs:
  actualizar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (con credenciales y repo completo)
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Mostrar remotos y rama
        run: |
          git remote -v
          git branch -vv

      # ‚úÖ 1) Traer cambios antes de tocar nada
      - name: Pull inicial
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull --rebase || echo "Sin cambios en remoto"

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Instalar dependencias (Playwright + Chromium)
        run: |
          pip install requests beautifulsoup4 playwright
          python -m playwright install --with-deps chromium

      - name: Ver JSON ANTES del scraper (si existe)
        run: |
          echo "---- JSON antes ----"
          if [ -f precio-aceite.json ]; then
            cat precio-aceite.json
            echo "SHA antes:" && sha256sum precio-aceite.json || shasum precio-aceite.json
          else
            echo "no existe"
          fi

      # ‚úÖ 2) Generar el JSON ahora (tras el pull)
      - name: Ejecutar scraper (Playwright)
        run: python scraper.py

      - name: Ver JSON DESPU√âS del scraper
        run: |
          echo "---- JSON despu√©s ----"
          cat precio-aceite.json
          echo "SHA despu√©s:" && sha256sum precio-aceite.json || shasum precio-aceite.json

      # üîé Diagn√≥stico: comprobar si Git lo est√° ignorando
      - name: Verificar si precio-aceite.json est√° ignorado
        run: |
          git check-ignore -v precio-aceite.json || echo "No est√° ignorado"

      # ‚úÖ 3) A√±adir, commitear y pushear
      - name: Preparar commit
        run: |
          git status
          git add -A
          git status
          git diff --staged || true
          git commit -m "Actualizar precio autom√°ticamente (Infaoliva, Playwright)" || echo "No hay cambios para confirmar"

      - name: Hacer push con token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          git push origin HEAD:main
          echo "√öltimo commit en esta rama:"
          git log -1 --oneline

      # üöÄ Redeploy SIEMPRE en Netlify
      - name: Disparar redeploy en Netlify (Build Hook) ‚Äî siempre
        if: ${{ always() }}
        env:
          BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK_URL }}
        run: |
          if [ -z "$BUILD_HOOK" ]; then
            echo "‚ùå Falta NETLIFY_BUILD_HOOK_URL en Secrets."
            exit 0
          fi
          echo "üöÄ Lanzando redeploy en Netlify‚Ä¶"
          curl -i -X POST -H "Content-Type: application/json" --data '{}' "$BUILD_HOOK"
